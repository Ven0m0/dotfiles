#!/bin/bash
# shellcheck shell=bash

# Rust
if command -v cargo &>/dev/null; then
  export CARGO_HOME="${HOME}/.cargo" RUSTUP_HOME="${HOME}/.rustup"
  export CARGO_HTTP_MULTIPLEXING=true CARGO_NET_GIT_FETCH_WITH_CLI=true 
  export CARGO_HTTP_SSL_VERSION=tlsv1.3 CARGO_REGISTRIES_CRATES_IO_PROTOCOL=sparse
fi

export FIGNORE=argo.lock
export RUST_LOG=off

if [ -e "$HOME/.cargo/bin" ]; then
  PATH="${HOME}/.cargo/bin:${PATH}"
fi

command -v sccache &>/dev/null && export RUSTC_WRAPPER=sccache
command -v gix &>/dev/null && export GITOXIDE_CORE_MULTIPACKINDEX=true GITOXIDE_HTTP_SSLVERSIONMAX=tls1.3 GITOXIDE_HTTP_SSLVERSIONMIN=tls1.2

# Wayland
if [[ ${XDG_SESSION_TYPE:-} = "wayland" ]]; then
  export QT_QPA_PLATFORMTHEME=qt6ct
  export GDK_BACKEND=wayland
  export QT_QPA_PLATFORM=wayland
  export ELECTRON_OZONE_PLATFORM_HINT=auto
  export SDL_VIDEODRIVER=wayland
  export MOZ_ENABLE_XINPUT2=1
  export MOZ_ENABLE_WAYLAND=1
  # To use KDE file dialog with firefox https://daniele.tech/2019/02/how-to-execute-firefox-with-support-for-kde-filepicker/
  export GTK_USE_PORTAL=1
fi

# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
export PYTHONOPTIMIZE=2 PYTHONIOENCODING='UTF-8' PYTHON_JIT=1
export PYTORCH_ENABLE_MPS_FALLBACK=1

# Java
export JAVA_OPTIONS="-Xmx2G -Dfile.encoding=UTF-8 -Dawt.useSystemAAFontSettings=on -XX:+IgnoreUnrecognizedVMOptions -XX:+UnlockExperimentalVMOptions -XX:+UnlockDiagnosticVMOptions"
alias java='java "$JAVA_OPTIONS"'

# export JAVA_HOME=""

# Homebrew
export HOMEBREW_NO_ANALYTICS=true

export LC_CTYPE=C LC_COLLATE=C
# https://www.reddit.com/r/programming/comments/109rjuj/how_setting_the_tz_environment_variable_avoids/
export TZ=$(readlink -f /etc/localtime | cut -d/ -f 5-)

# Rust-parallel
command -v rust-parallel &>/dev/null && export PROGRESS_STYLE=simple

# Bins
#if [ -d "${HOME}/bin" ] && [[ ":$PATH:" != *":${HOME}/bin:"* ]]; then
  #export PATH="${HOME}/bin:${PATH}"
#fi
# Inline
[[ -d "${HOME}/bin" && ":$PATH:" != *":${HOME}/bin:"* ]] && export PATH="${HOME}/bin:${PATH}"

# Path dedupe
PATH=$(echo "$PATH" | awk -v RS=: '!($0 in a) {a[$0]; printf("%s%s", length(a) > 1 ? ":" : "", $0)}')
export PATH

# Cache
command -v buildcache &>/dev/null && export BUILDCACHE_COMPRESS_FORMAT=ZSTD BUILDCACHE_DIRECT_MODE=true
command -v ccache &>/dev/null && export CCACHE_COMPRESS=true CCACHE_COMPRESSLEVEL=3 CCACHE_INODECACHE=true

ARCH="$(uname -m)"
SHELL=/usr/bin/bash

export MAKEFLAGS="-j$(nproc)"

# NVIDIA
__GL_THREADED_OPTIMIZATION=1
__GL_SHADER_DISK_CACHE=1
__GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1
mesa_glthread=true

# Color for manpages in less makes manpages a little easier to read
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

if command -v proton &>/dev/null; then
  PROTON_DLSS_UPGRADE=1
  PROTON_FSR4_UPGRADE=1
  PROTON_XESS_UPGRADE=1
  PROTON_ENABLE_WAYLAND=1
  PROTON_NO_WM_DECORATION=1
  PROTON_USE_NTSYNC=1

  #PROTON_NVIDIA_LIBS=1
  PROTON_NVIDIA_LIBS_NO_32BIT=1
  PROTON_NVIDIA_NVENC=1
  PROTON_NVIDIA_NVCUDA=1
  #PROTON_NVIDIA_NVML=1
  #PROTON_NVIDIA_NVOPTIX=1

  unset PROTON_LOCAL_SHADER_CACHE
  # PROTON_PREFER_SDL=1
  # PROTON_NO_STEAMINPUT=1
  # PROTON_ENABLE_HDR=1
  # sudo pacman -S --noconform --needed vk-hdr-layer-kwin6-git
  # ENABLE_HDR_WSI=1

  __GL_SHADER_DISK_CACHE_SKIP_CLEANUP=1
  __GL_SHADER_DISK_CACHE_SIZE=12000000000
fi

if command -v wime &>/dev/null
  WINE_NO_WM_DECORATION=1
  WINE_PREFER_SDL_INPUT=1
fi
